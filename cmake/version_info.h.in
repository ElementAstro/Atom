/**
 * @file atom_version_info.h
 * @brief Auto-generated Atom version information header file
 * 
 * This file is automatically generated by CMake, do not modify manually
 */

#ifndef ATOM_VERSION_INFO_H
#define ATOM_VERSION_INFO_H

#ifdef __cplusplus
extern "C" {
#endif

/**
 * @brief Atom version string
 */
#define ATOM_VERSION_STRING "@PROJECT_VERSION@"

/**
 * @brief Atom major version number
 */
#define ATOM_VERSION_MAJOR @PROJECT_VERSION_MAJOR@

/**
 * @brief Atom minor version number
 */
#define ATOM_VERSION_MINOR @PROJECT_VERSION_MINOR@

/**
 * @brief Atom patch version number
 */
#define ATOM_VERSION_PATCH @PROJECT_VERSION_PATCH@

/**
 * @brief Get the full Atom version string
 * @return Version string (e.g. "1.2.3")
 */
static inline const char* atom_get_version(void) {
    return ATOM_VERSION_STRING;
}

/**
 * @brief Check if the current Atom version meets the minimum version requirement
 * @param major Required minimum major version
 * @param minor Required minimum minor version
 * @param patch Required minimum patch version
 * @return Returns 1 if the current version is greater than or equal to the specified version, otherwise returns 0
 */
static inline int atom_check_version(int major, int minor, int patch) {
    return (ATOM_VERSION_MAJOR > major) ||
           (ATOM_VERSION_MAJOR == major && ATOM_VERSION_MINOR > minor) ||
           (ATOM_VERSION_MAJOR == major && ATOM_VERSION_MINOR == minor && ATOM_VERSION_PATCH >= patch);
}

#ifdef __cplusplus
}
#endif

#endif /* ATOM_VERSION_INFO_H */